{"version":3,"file":"index.es.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["/* global window */\nconst matchPath = (pathname, candidate, exact) => {\n  if (typeof candidate === 'string') {\n    return exact === true\n      ? candidate === pathname\n      : pathname.slice(0, candidate.length) === candidate;\n  }\n\n  if (typeof candidate === 'function') {\n    return matchPath(pathname, candidate(pathname));\n  }\n\n  if (candidate instanceof RegExp) {\n    return candidate.test(pathname);\n  }\n\n  throw new Error('ReactTitleConfig: path must be one of type string, function, array or RegExp!');\n};\n\nexport const match = (config) => {\n  const { pathname } = window.location;\n\n  return config.reduce((memo, descriptor) => {\n    if (memo) return memo;\n\n    if (Array.isArray(descriptor.path)) {\n      return descriptor.path.some(item => matchPath(pathname, item)) ? descriptor : memo;\n    }\n\n    return matchPath(pathname, descriptor.path, descriptor.exact) ? descriptor : memo;\n  }, null);\n};\n\nexport const getDefaultDescriptor = (defaultTitle) => {\n  const title = defaultTitle || '';\n  return { title, default: true };\n};\n\nexport const queryParamsFromUrl = () => {\n  const items = window.location.search.slice(1).split('&');\n\n  if (items.length) {\n    return items.reduce((memo, item) => {\n      const [name, value] = item.split('=');\n      return { ...memo, [name]: value === undefined ? true : value };\n    }, {});\n  }\n\n  return {};\n};\n\nexport const getTitle = (descriptor, extras) => {\n  if (typeof descriptor.title === 'string') {\n    return descriptor.title;\n  }\n\n  if (typeof descriptor.title === 'function') {\n    const params = {\n      queryParams: queryParamsFromUrl(),\n    };\n\n    return descriptor.title(params, descriptor, extras);\n  }\n\n  throw new Error(`ReactTitleConfig: title for ${descriptor.path} is neither a string or a function!`);\n};\n","/* global document */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  match,\n  getTitle,\n  getDefaultDescriptor,\n} from './utils';\n\nconst TitleConfig = (props) => {\n  const {\n    config, defaultTitle, prefix, ...extras\n  } = props;\n  const descriptor = match(config) || getDefaultDescriptor(defaultTitle);\n\n  if (descriptor) {\n    const title = getTitle(descriptor, extras);\n    document.title = (title && !descriptor.skipPrefix && !descriptor.default) ? prefix + title : title;\n  }\n\n  return null;\n};\n\nTitleConfig.defaultProps = {\n  prefix: '',\n  defaultTitle: '',\n};\n\nTitleConfig.propTypes = {\n  prefix: PropTypes.string,\n  defaultTitle: PropTypes.string,\n  config: PropTypes.arrayOf(PropTypes.shape({\n    exact: PropTypes.bool,\n    skipPrefix: PropTypes.bool,\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    path: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.instanceOf(RegExp),\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.instanceOf(RegExp)])),\n    ]).isRequired,\n  })).isRequired,\n};\n\nexport default TitleConfig;\n"],"names":["matchPath","pathname","candidate","exact","slice","length","RegExp","test","Error","match","config","window","location","reduce","memo","descriptor","Array","isArray","path","some","item","getDefaultDescriptor","defaultTitle","title","default","queryParamsFromUrl","items","search","split","name","value","undefined","getTitle","extras","params","TitleConfig","props","prefix","skipPrefix","defaultProps","propTypes","PropTypes","string","arrayOf","shape","bool","oneOfType","func","isRequired","instanceOf"],"mappings":"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"}